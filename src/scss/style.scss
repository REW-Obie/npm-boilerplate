//variables test
:root {
  --zIndex-1: 10;
  --zIndex-2: 20;
  --zIndex-3: 30;
  --zIndex-4: 40;
  --zIndex-5: 50;
  --zIndex-6: 60;
  --zIndex-7: 70;
  --zIndex-8: 80;
  --zIndex-9: 90;
}

#app {
    --zIndex-base: var(--zIndex-1);
    --zIndex-overlay: var(--zIndex-4);
    --zIndex-modal: var(--zIndex-8);
}

.component {
    --zIndex-icon: var(--zIndex-2);
    --zIndex-popover: var(--zIndex-4);
    --zIndex-overlay: var(--zIndex-7);
}

.component .ovr {

    z-index: var(--zIndex-overlay);
}

//scss test
$gridConfig:(
    columns : 12,
    gutter  : percentage(0.02),
    breakpoint  : ( 50  *  1em ),
    contentPadding  : ( 1  *  1em )
) !default;

@function getGrid($setting){
  @return map-get($gridConfig,$setting);
}

@if($gridConfig){

  //structure
  @media(min-width:getGrid(breakpoint)){

    %Grid__container{
      overflow: hidden;
      display:flex;
    }

    %Grid__col{
      float:left;
      margin:0;
      padding-left: getGrid(gutter);
      padding-right: getGrid(gutter);
    }
  }

  @for $i from 1 through getGrid(columns){
     .o-Grid_#{$i}{
       @media(min-width:getGrid(breakpoint)){
         @extend %Grid__col;
         width: ( ($i / getGrid(columns)) * 100% ) ;
       }
     }
  }
  .o-Grid__container{
    @extend %Grid__container;
  }

  .o-Grid__container{
    overflow:hidden;
    padding:getGrid(contentPadding) ;
  }

  .o-Grid__content{
    padding:getGrid(contentPadding) ;
  }
}